version: '3.3'

services:

   db:
     image: mysql:5.7
     restart: always
     volumes:
       #
       # Persist our MySQL data
       #
       - ./data:/var/lib/mysql
     environment:
       MYSQL_ROOT_PASSWORD: 
       MYSQL_DATABASE: appletreesg
       MYSQL_USER: appletreesg
       MYSQL_PASSWORD: 

   #
   # PHP FPM runs persistently, and services requests over port 9000
   # from our webserver.
   #
   php:
     image: wordpress:5-fpm
     depends_on:
       - db
     restart: always
     volumes:
       #
       # Copy in our PHP config for large uploads.
       #
       - ./php-uploads.ini:/usr/local/etc/php/conf.d/uploads.ini
       #
       # When first run, this image populates /var/www/html/ with a Wordpress install,
       # and we want that to be exported so we have a copy of our code.
       #
       - ./html:/var/www/html
     environment:
       WORDPRESS_DB_HOST: db:3306
       WORDPRESS_DB_NAME: appletreesg
       WORDPRESS_DB_USER: appletreesg
       WORDPRESS_DB_PASSWORD:
       WORDPRESS_TABLE_PREFIX: at_

   web:
     image: nginx
     depends_on:
       - php
     restart: always
     volumes:
       #
       # Import our Nginx configuration for FPM.
       #
       - ./nginx.conf:/etc/nginx/conf.d/default.conf
       #
       # The webserver will also need to see our Wordpress install.
       #
       - ./html:/var/www/html
       #
       # Write logs here.  Note that they will need to be 
       # rotated on the parent system.
       #
       - ./logs:/var/log/nginx
     

   https-portal:
     image: steveltn/https-portal:1
     depends_on:
       - web
     ports:
       - 80:80
       - 443:443
     restart: always
     #
     # Save our SSL certs between runs so they aren't regenerated on every single run.
     #
     volumes:
       - ./ssl_certs:/var/lib/https-portal
     environment:
       DOMAINS: 'www.appletreesg.com -> http://web:80 #production, appletreesg.com => http://web:80 #production'
       #DOMAINS: 'YOUR_FQDN -> http://web:80 #staging' # Uncomment when you want to test a staging cert.
       #DOMAINS: 'YOUR_FQDN -> http://web:80 #production' # Uncomment when you are ready for production.
       #
       # Allow larger files to be uploaded
       #
       CLIENT_MAX_BODY_SIZE: 64M